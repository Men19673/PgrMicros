

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue May 25 11:15:50 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	idataBANK0
   211  0198                     __pidataBANK0:
   212                           
   213                           ;initializer for _cad
   214  0198  3420               	retlw	32
   215  0199  340D               	retlw	13
   216  019A  3442               	retlw	66
   217  019B  3469               	retlw	105
   218  019C  3465               	retlw	101
   219  019D  346E               	retlw	110
   220  019E  3476               	retlw	118
   221  019F  3465               	retlw	101
   222  01A0  346E               	retlw	110
   223  01A1  3469               	retlw	105
   224  01A2  3464               	retlw	100
   225  01A3  346F               	retlw	111
   226  01A4  342C               	retlw	44
   227  01A5  3420               	retlw	32
   228  01A6  3463               	retlw	99
   229  01A7  346F               	retlw	111
   230  01A8  346D               	retlw	109
   231  01A9  346F               	retlw	111
   232  01AA  3420               	retlw	32
   233  01AB  3465               	retlw	101
   234  01AC  3473               	retlw	115
   235  01AD  3474               	retlw	116
   236  01AE  3461               	retlw	97
   237  01AF  3473               	retlw	115
   238  01B0  343F               	retlw	63
   239  01B1  340D               	retlw	13
   240                           
   241                           ;initializer for _car
   242  01B2  3420               	retlw	32
   243  01B3  340D               	retlw	13
   244  01B4  3451               	retlw	81
   245  01B5  3475               	retlw	117
   246  01B6  3465               	retlw	101
   247  01B7  3420               	retlw	32
   248  01B8  3463               	retlw	99
   249  01B9  3461               	retlw	97
   250  01BA  3472               	retlw	114
   251  01BB  3461               	retlw	97
   252  01BC  3463               	retlw	99
   253  01BD  3474               	retlw	116
   254  01BE  3465               	retlw	101
   255  01BF  3472               	retlw	114
   256  01C0  3420               	retlw	32
   257  01C1  3464               	retlw	100
   258  01C2  3465               	retlw	101
   259  01C3  3473               	retlw	115
   260  01C4  3465               	retlw	101
   261  01C5  3461               	retlw	97
   262  01C6  343F               	retlw	63
   263  01C7  340D               	retlw	13
   264  01C8  3400               	retlw	0
   265  01C9  3400               	retlw	0
   266                           
   267                           	psect	idataBANK3
   268  0105                     __pidataBANK3:
   269                           
   270                           ;initializer for _str
   271  0105  3420               	retlw	32
   272  0106  3451               	retlw	81
   273  0107  3475               	retlw	117
   274  0108  3465               	retlw	101
   275  0109  3420               	retlw	32
   276  010A  3461               	retlw	97
   277  010B  3463               	retlw	99
   278  010C  3463               	retlw	99
   279  010D  3469               	retlw	105
   280  010E  346F               	retlw	111
   281  010F  346E               	retlw	110
   282  0110  3420               	retlw	32
   283  0111  3464               	retlw	100
   284  0112  3465               	retlw	101
   285  0113  3473               	retlw	115
   286  0114  3465               	retlw	101
   287  0115  3461               	retlw	97
   288  0116  3420               	retlw	32
   289  0117  3465               	retlw	101
   290  0118  346A               	retlw	106
   291  0119  3465               	retlw	101
   292  011A  3463               	retlw	99
   293  011B  3475               	retlw	117
   294  011C  3474               	retlw	116
   295  011D  3461               	retlw	97
   296  011E  3472               	retlw	114
   297  011F  343F               	retlw	63
   298  0120  340D               	retlw	13
   299  0121  3428               	retlw	40
   300  0122  3431               	retlw	49
   301  0123  3429               	retlw	41
   302  0124  3444               	retlw	68
   303  0125  3465               	retlw	101
   304  0126  3473               	retlw	115
   305  0127  3470               	retlw	112
   306  0128  346C               	retlw	108
   307  0129  3465               	retlw	101
   308  012A  3467               	retlw	103
   309  012B  3461               	retlw	97
   310  012C  3472               	retlw	114
   311  012D  3420               	retlw	32
   312  012E  3463               	retlw	99
   313  012F  3461               	retlw	97
   314  0130  3464               	retlw	100
   315  0131  3465               	retlw	101
   316  0132  346E               	retlw	110
   317  0133  3461               	retlw	97
   318  0134  3420               	retlw	32
   319  0135  3464               	retlw	100
   320  0136  3465               	retlw	101
   321  0137  3420               	retlw	32
   322  0138  3463               	retlw	99
   323  0139  3461               	retlw	97
   324  013A  3472               	retlw	114
   325  013B  3461               	retlw	97
   326  013C  3463               	retlw	99
   327  013D  3474               	retlw	116
   328  013E  3465               	retlw	101
   329  013F  3472               	retlw	114
   330  0140  3465               	retlw	101
   331  0141  3473               	retlw	115
   332  0142  340D               	retlw	13
   333  0143  3428               	retlw	40
   334  0144  3432               	retlw	50
   335  0145  3429               	retlw	41
   336  0146  3443               	retlw	67
   337  0147  3461               	retlw	97
   338  0148  346D               	retlw	109
   339  0149  3462               	retlw	98
   340  014A  3469               	retlw	105
   341  014B  3461               	retlw	97
   342  014C  3472               	retlw	114
   343  014D  3420               	retlw	32
   344  014E  3450               	retlw	80
   345  014F  344F               	retlw	79
   346  0150  3452               	retlw	82
   347  0151  3454               	retlw	84
   348  0152  3441               	retlw	65
   349  0153  340D               	retlw	13
   350  0154  3428               	retlw	40
   351  0155  3433               	retlw	51
   352  0156  3429               	retlw	41
   353  0157  3443               	retlw	67
   354  0158  3461               	retlw	97
   355  0159  346D               	retlw	109
   356  015A  3462               	retlw	98
   357  015B  3469               	retlw	105
   358  015C  3461               	retlw	97
   359  015D  3472               	retlw	114
   360  015E  3420               	retlw	32
   361  015F  3450               	retlw	80
   362  0160  344F               	retlw	79
   363  0161  3452               	retlw	82
   364  0162  3454               	retlw	84
   365  0163  3442               	retlw	66
   366  0164  3400               	retlw	0
   367  000D                     _PIR2	set	13
   368  000C                     _PIR1	set	12
   369  0009                     _PORTE	set	9
   370  0008                     _PORTD	set	8
   371  0007                     _PORTC	set	7
   372  000B                     _INTCON	set	11
   373  0018                     _RCSTAbits	set	24
   374  0006                     _PORTB	set	6
   375  0005                     _PORTA	set	5
   376  0019                     _TXREG	set	25
   377  001A                     _RCREG	set	26
   378  0064                     _TXIF	set	100
   379  0065                     _RCIF	set	101
   380  008D                     _PIE2	set	141
   381  008C                     _PIE1	set	140
   382  009A                     _SPBRGH	set	154
   383  0099                     _SPBRG	set	153
   384  0098                     _TXSTAbits	set	152
   385  008F                     _OSCCONbits	set	143
   386  0081                     _OPTION_REG	set	129
   387  0089                     _TRISE	set	137
   388  0088                     _TRISD	set	136
   389  0087                     _TRISC	set	135
   390  0086                     _TRISB	set	134
   391  0085                     _TRISA	set	133
   392  0187                     _BAUDCTLbits	set	391
   393  0189                     _ANSELH	set	393
   394  0188                     _ANSEL	set	392
   395                           
   396                           	psect	cinit
   397  000F                     start_initialization:	
   398                           ; #config settings
   399                           
   400  000F                     __initialization:
   401                           
   402                           ; Initialize objects allocated to BANK3
   403  000F  1783               	bsf	3,7	;select IRP bank2
   404  0010  30F0               	movlw	low (__pdataBANK3+96)
   405  0011  00FD               	movwf	btemp+-1
   406  0012  3001               	movlw	high __pidataBANK3
   407  0013  00FE               	movwf	btemp
   408  0014  3005               	movlw	low __pidataBANK3
   409  0015  00FF               	movwf	btemp+1
   410  0016  3090               	movlw	low __pdataBANK3
   411  0017  0084               	movwf	4
   412  0018  120A  118A  21CE  120A  118A  	fcall	init_ram0
   413                           
   414                           ; Initialize objects allocated to BANK0
   415  001D  1383               	bcf	3,7	;select IRP bank0
   416  001E  3052               	movlw	low (__pdataBANK0+50)
   417  001F  00FD               	movwf	btemp+-1
   418  0020  3001               	movlw	high __pidataBANK0
   419  0021  00FE               	movwf	btemp
   420  0022  3098               	movlw	low __pidataBANK0
   421  0023  00FF               	movwf	btemp+1
   422  0024  3020               	movlw	low __pdataBANK0
   423  0025  0084               	movwf	4
   424  0026  120A  118A  21CE  120A  118A  	fcall	init_ram0
   425                           
   426                           ; Clear objects allocated to COMMON
   427  002B  01F0               	clrf	__pbssCOMMON& (0+127)
   428  002C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   429  002D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   430  002E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   431  002F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   432  0030  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   433  0031                     end_of_initialization:	
   434                           ;End of C runtime variable initialization code
   435                           
   436  0031                     __end_of__initialization:
   437  0031  0183               	clrf	3
   438  0032  120A  118A  2835   	ljmp	_main	;jump to C main() function
   439                           
   440                           	psect	bssCOMMON
   441  0070                     __pbssCOMMON:
   442  0070                     _var4:
   443  0070                     	ds	1
   444  0071                     _var3:
   445  0071                     	ds	1
   446  0072                     _var2:
   447  0072                     	ds	1
   448  0073                     _var1:
   449  0073                     	ds	1
   450  0074                     _var0:
   451  0074                     	ds	1
   452  0075                     _valor:
   453  0075                     	ds	1
   454                           
   455                           	psect	dataBANK0
   456  0020                     __pdataBANK0:
   457  0020                     _cad:
   458  0020                     	ds	26
   459  003A                     _car:
   460  003A                     	ds	24
   461                           
   462                           	psect	dataBANK3
   463  0190                     __pdataBANK3:
   464  0190                     _str:
   465  0190                     	ds	96
   466                           
   467                           	psect	inittext
   468  01CA                     init_fetch0:	
   469                           ;	Called with low address in FSR and high address in W
   470                           
   471  01CA  087E               	movf	btemp,w
   472  01CB  008A               	movwf	10
   473  01CC  087F               	movf	btemp+1,w
   474  01CD  0082               	movwf	2
   475  01CE                     init_ram0:	
   476                           ;Called with:
   477                           ;	high address of idata address in btemp 
   478                           ;	low address of idata address in btemp+1 
   479                           ;	low address of data in FSR
   480                           ;	high address + 1 of data in btemp-1
   481                           
   482  01CE  120A  118A  21CA  120A  118A  	fcall	init_fetch0
   483  01D3  0080               	movwf	0
   484  01D4  0A84               	incf	4,f
   485  01D5  0804               	movf	4,w
   486  01D6  067D               	xorwf	btemp+-1,w
   487  01D7  1903               	btfsc	3,2
   488  01D8  3400               	retlw	0
   489  01D9  0AFF               	incf	btemp+1,f
   490  01DA  1903               	btfsc	3,2
   491  01DB  0AFE               	incf	btemp,f
   492  01DC  29CE               	goto	init_ram0
   493                           
   494                           	psect	cstackCOMMON
   495  0076                     __pcstackCOMMON:
   496  0076                     ?_setup:
   497  0076                     ?_isr:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0076                     ??_isr:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0076                     ?_main:	
   504                           ; 1 bytes @ 0x0
   505                           
   506                           
   507                           ; 1 bytes @ 0x0
   508  0076                     	ds	2
   509  0078                     ??_setup:
   510  0078                     ??_main:	
   511                           ; 1 bytes @ 0x2
   512                           
   513                           
   514                           ; 1 bytes @ 0x2
   515  0078                     	ds	2
   516                           
   517                           	psect	maintext
   518  0035                     __pmaintext:	
   519 ;;
   520 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   521 ;;
   522 ;; *************** function _main *****************
   523 ;; Defined at:
   524 ;;		line 121 in file "Main.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : B00/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   538 ;;      Params:         0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0
   540 ;;      Temps:          2       0       0       0       0
   541 ;;      Totals:         2       0       0       0       0
   542 ;;Total ram usage:        2 bytes
   543 ;; Hardware stack levels required when called: 2
   544 ;; This function calls:
   545 ;;		_setup
   546 ;; This function is called by:
   547 ;;		Startup code after reset
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           
   552                           ;psect for function _main
   553  0035                     _main:
   554  0035                     l765:	
   555                           ;incstack = 0
   556                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   557                           
   558                           
   559                           ;Main.c: 122:     setup();
   560  0035  120A  118A  2165  120A  118A  	fcall	_setup
   561  003A                     l767:
   562                           
   563                           ;Main.c: 123:     var0 = 0;
   564  003A  01F4               	clrf	_var0
   565  003B                     l769:
   566                           
   567                           ;Main.c: 128:     if (var0 == 0){
   568  003B  0874               	movf	_var0,w
   569  003C  1D03               	btfss	3,2
   570  003D  283F               	goto	u11
   571  003E  2840               	goto	u10
   572  003F                     u11:
   573  003F  286A               	goto	l783
   574  0040                     u10:
   575  0040                     l771:
   576                           
   577                           ;Main.c: 129:        if(var1 <= 96){
   578  0040  3061               	movlw	97
   579  0041  0273               	subwf	_var1,w
   580  0042  1803               	skipnc
   581  0043  2845               	goto	u21
   582  0044  2846               	goto	u20
   583  0045                     u21:
   584  0045  284B               	goto	l90
   585  0046                     u20:
   586  0046                     l773:
   587                           
   588                           ;Main.c: 130:            var1++;
   589  0046  3001               	movlw	1
   590  0047  00F8               	movwf	??_main
   591  0048  0878               	movf	??_main,w
   592  0049  07F3               	addwf	_var1,f
   593                           
   594                           ;Main.c: 131:        }
   595  004A  2855               	goto	l777
   596  004B                     l90:	
   597                           ;Main.c: 132:        else{
   598                           
   599                           
   600                           ;Main.c: 133:             if(RCIF == 1){
   601  004B  1283               	bcf	3,5	;RP0=0, select bank0
   602  004C  1303               	bcf	3,6	;RP1=0, select bank0
   603  004D  1E8C               	btfss	12,5	;volatile
   604  004E  2850               	goto	u31
   605  004F  2851               	goto	u30
   606  0050                     u31:
   607  0050  2855               	goto	l777
   608  0051                     u30:
   609  0051                     l775:
   610                           
   611                           ;Main.c: 134:                         var0 = RCREG;
   612  0051  081A               	movf	26,w	;volatile
   613  0052  00F8               	movwf	??_main
   614  0053  0878               	movf	??_main,w
   615  0054  00F4               	movwf	_var0
   616  0055                     l777:
   617                           
   618                           ;Main.c: 137:        if(TXIF == 1){
   619  0055  1283               	bcf	3,5	;RP0=0, select bank0
   620  0056  1303               	bcf	3,6	;RP1=0, select bank0
   621  0057  1E0C               	btfss	12,4	;volatile
   622  0058  285A               	goto	u41
   623  0059  285B               	goto	u40
   624  005A                     u41:
   625  005A  2861               	goto	l781
   626  005B                     u40:
   627  005B                     l779:
   628                           
   629                           ;Main.c: 138:         TXREG = str[var1];
   630  005B  0873               	movf	_var1,w
   631  005C  3E90               	addlw	(low (_str| (0+256)))& (0+255)
   632  005D  0084               	movwf	4
   633  005E  1783               	bsf	3,7	;select IRP bank3
   634  005F  0800               	movf	0,w
   635  0060  0099               	movwf	25	;volatile
   636  0061                     l781:
   637                           
   638                           ;Main.c: 140:         _delay((unsigned long)((100)*(4000000/4000.0)));
   639  0061  3082               	movlw	130
   640  0062  00F9               	movwf	??_main+1
   641  0063  30DD               	movlw	221
   642  0064  00F8               	movwf	??_main
   643  0065                     u187:
   644  0065  0BF8               	decfsz	??_main,f
   645  0066  2865               	goto	u187
   646  0067  0BF9               	decfsz	??_main+1,f
   647  0068  2865               	goto	u187
   648  0069  286A               	nop2
   649  006A                     l783:
   650                           
   651                           ;Main.c: 144:     if (var0 == 49){
   652  006A  3031               	movlw	49
   653  006B  0674               	xorwf	_var0,w
   654  006C  1D03               	btfss	3,2
   655  006D  286F               	goto	u51
   656  006E  2870               	goto	u50
   657  006F                     u51:
   658  006F  2893               	goto	l797
   659  0070                     u50:
   660  0070                     l785:
   661                           
   662                           ;Main.c: 145:        if(var2 <= 26){
   663  0070  301B               	movlw	27
   664  0071  0272               	subwf	_var2,w
   665  0072  1803               	skipnc
   666  0073  2875               	goto	u61
   667  0074  2876               	goto	u60
   668  0075                     u61:
   669  0075  287B               	goto	l789
   670  0076                     u60:
   671  0076                     l787:
   672                           
   673                           ;Main.c: 146:            var2++;
   674  0076  3001               	movlw	1
   675  0077  00F8               	movwf	??_main
   676  0078  0878               	movf	??_main,w
   677  0079  07F2               	addwf	_var2,f
   678                           
   679                           ;Main.c: 147:        }
   680  007A  287E               	goto	l791
   681  007B                     l789:
   682                           
   683                           ;Main.c: 149:            var0=0;
   684  007B  01F4               	clrf	_var0
   685                           
   686                           ;Main.c: 150:            var1=0;
   687  007C  01F3               	clrf	_var1
   688                           
   689                           ;Main.c: 151:            var2=0;
   690  007D  01F2               	clrf	_var2
   691  007E                     l791:
   692                           
   693                           ;Main.c: 153:        if(TXIF == 1){
   694  007E  1283               	bcf	3,5	;RP0=0, select bank0
   695  007F  1303               	bcf	3,6	;RP1=0, select bank0
   696  0080  1E0C               	btfss	12,4	;volatile
   697  0081  2883               	goto	u71
   698  0082  2884               	goto	u70
   699  0083                     u71:
   700  0083  288A               	goto	l795
   701  0084                     u70:
   702  0084                     l793:
   703                           
   704                           ;Main.c: 154:         TXREG = cad[var2];
   705  0084  0872               	movf	_var2,w
   706  0085  3E20               	addlw	(low (_cad| 0))& (0+255)
   707  0086  0084               	movwf	4
   708  0087  1383               	bcf	3,7	;select IRP bank0
   709  0088  0800               	movf	0,w
   710  0089  0099               	movwf	25	;volatile
   711  008A                     l795:
   712                           
   713                           ;Main.c: 156:         _delay((unsigned long)((100)*(4000000/4000.0)));
   714  008A  3082               	movlw	130
   715  008B  00F9               	movwf	??_main+1
   716  008C  30DD               	movlw	221
   717  008D  00F8               	movwf	??_main
   718  008E                     u197:
   719  008E  0BF8               	decfsz	??_main,f
   720  008F  288E               	goto	u197
   721  0090  0BF9               	decfsz	??_main+1,f
   722  0091  288E               	goto	u197
   723  0092  2893               	nop2
   724  0093                     l797:
   725                           
   726                           ;Main.c: 159:      if (var0 == 50){
   727  0093  3032               	movlw	50
   728  0094  0674               	xorwf	_var0,w
   729  0095  1D03               	btfss	3,2
   730  0096  2898               	goto	u81
   731  0097  2899               	goto	u80
   732  0098                     u81:
   733  0098  28CA               	goto	l821
   734  0099                     u80:
   735  0099                     l799:
   736                           
   737                           ;Main.c: 160:        if(var3 <= 24){
   738  0099  3019               	movlw	25
   739  009A  0271               	subwf	_var3,w
   740  009B  1803               	skipnc
   741  009C  289E               	goto	u91
   742  009D  289F               	goto	u90
   743  009E                     u91:
   744  009E  28A4               	goto	l101
   745  009F                     u90:
   746  009F                     l801:
   747                           
   748                           ;Main.c: 161:            var3++;
   749  009F  3001               	movlw	1
   750  00A0  00F8               	movwf	??_main
   751  00A1  0878               	movf	??_main,w
   752  00A2  07F1               	addwf	_var3,f
   753                           
   754                           ;Main.c: 162:        }
   755  00A3  28B5               	goto	l815
   756  00A4                     l101:	
   757                           ;Main.c: 165:            }
   758                           
   759                           
   760                           ;Main.c: 164:           while(RCIF == 0){
   761  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   762  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   763  00A6  1E8C               	btfss	12,5	;volatile
   764  00A7  28A9               	goto	u101
   765  00A8  28AA               	goto	u100
   766  00A9                     u101:
   767  00A9  28A4               	goto	l101
   768  00AA                     u100:
   769  00AA                     l103:
   770                           
   771                           ;Main.c: 166:           if(RCIF ==1){
   772  00AA  1E8C               	btfss	12,5	;volatile
   773  00AB  28AD               	goto	u111
   774  00AC  28AE               	goto	u110
   775  00AD                     u111:
   776  00AD  28B0               	goto	l805
   777  00AE                     u110:
   778  00AE                     l803:
   779                           
   780                           ;Main.c: 167:              PORTA = RCREG;
   781  00AE  081A               	movf	26,w	;volatile
   782  00AF  0085               	movwf	5	;volatile
   783  00B0                     l805:
   784                           
   785                           ;Main.c: 170:            var0=0;
   786  00B0  01F4               	clrf	_var0
   787  00B1                     l807:
   788                           
   789                           ;Main.c: 171:            var1=0;
   790  00B1  01F3               	clrf	_var1
   791  00B2                     l809:
   792                           
   793                           ;Main.c: 172:            var2=0;
   794  00B2  01F2               	clrf	_var2
   795  00B3                     l811:
   796                           
   797                           ;Main.c: 173:            var3=0;
   798  00B3  01F1               	clrf	_var3
   799  00B4                     l813:
   800                           
   801                           ;Main.c: 174:            var4=0;
   802  00B4  01F0               	clrf	_var4
   803  00B5                     l815:
   804                           
   805                           ;Main.c: 176:        if(TXIF == 1){
   806  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   807  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   808  00B7  1E0C               	btfss	12,4	;volatile
   809  00B8  28BA               	goto	u121
   810  00B9  28BB               	goto	u120
   811  00BA                     u121:
   812  00BA  28C1               	goto	l819
   813  00BB                     u120:
   814  00BB                     l817:
   815                           
   816                           ;Main.c: 177:         TXREG = car[var3];
   817  00BB  0871               	movf	_var3,w
   818  00BC  3E3A               	addlw	(low (_car| 0))& (0+255)
   819  00BD  0084               	movwf	4
   820  00BE  1383               	bcf	3,7	;select IRP bank0
   821  00BF  0800               	movf	0,w
   822  00C0  0099               	movwf	25	;volatile
   823  00C1                     l819:
   824                           
   825                           ;Main.c: 179:         _delay((unsigned long)((100)*(4000000/4000.0)));
   826  00C1  3082               	movlw	130
   827  00C2  00F9               	movwf	??_main+1
   828  00C3  30DD               	movlw	221
   829  00C4  00F8               	movwf	??_main
   830  00C5                     u207:
   831  00C5  0BF8               	decfsz	??_main,f
   832  00C6  28C5               	goto	u207
   833  00C7  0BF9               	decfsz	??_main+1,f
   834  00C8  28C5               	goto	u207
   835  00C9  28CA               	nop2
   836  00CA                     l821:
   837                           
   838                           ;Main.c: 182:     if (var0 == 51){
   839  00CA  3033               	movlw	51
   840  00CB  0674               	xorwf	_var0,w
   841  00CC  1D03               	btfss	3,2
   842  00CD  28CF               	goto	u131
   843  00CE  28D0               	goto	u130
   844  00CF                     u131:
   845  00CF  283B               	goto	l769
   846  00D0                     u130:
   847  00D0                     l823:
   848                           
   849                           ;Main.c: 183:        if(var4 <= 24){
   850  00D0  3019               	movlw	25
   851  00D1  0270               	subwf	_var4,w
   852  00D2  1803               	skipnc
   853  00D3  28D5               	goto	u141
   854  00D4  28D6               	goto	u140
   855  00D5                     u141:
   856  00D5  28DB               	goto	l109
   857  00D6                     u140:
   858  00D6                     l825:
   859                           
   860                           ;Main.c: 184:            var4++;
   861  00D6  3001               	movlw	1
   862  00D7  00F8               	movwf	??_main
   863  00D8  0878               	movf	??_main,w
   864  00D9  07F0               	addwf	_var4,f
   865                           
   866                           ;Main.c: 185:        }
   867  00DA  28EC               	goto	l839
   868  00DB                     l109:	
   869                           ;Main.c: 188:            }
   870                           
   871                           
   872                           ;Main.c: 187:           while(RCIF == 0){
   873  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   874  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   875  00DD  1E8C               	btfss	12,5	;volatile
   876  00DE  28E0               	goto	u151
   877  00DF  28E1               	goto	u150
   878  00E0                     u151:
   879  00E0  28DB               	goto	l109
   880  00E1                     u150:
   881  00E1                     l111:
   882                           
   883                           ;Main.c: 189:           if(RCIF ==1){
   884  00E1  1E8C               	btfss	12,5	;volatile
   885  00E2  28E4               	goto	u161
   886  00E3  28E5               	goto	u160
   887  00E4                     u161:
   888  00E4  28E7               	goto	l829
   889  00E5                     u160:
   890  00E5                     l827:
   891                           
   892                           ;Main.c: 190:              PORTB = RCREG;
   893  00E5  081A               	movf	26,w	;volatile
   894  00E6  0086               	movwf	6	;volatile
   895  00E7                     l829:
   896                           
   897                           ;Main.c: 192:            var0=0;
   898  00E7  01F4               	clrf	_var0
   899  00E8                     l831:
   900                           
   901                           ;Main.c: 193:            var1=0;
   902  00E8  01F3               	clrf	_var1
   903  00E9                     l833:
   904                           
   905                           ;Main.c: 194:            var2=0;
   906  00E9  01F2               	clrf	_var2
   907  00EA                     l835:
   908                           
   909                           ;Main.c: 195:            var3=0;
   910  00EA  01F1               	clrf	_var3
   911  00EB                     l837:
   912                           
   913                           ;Main.c: 196:            var4=0;
   914  00EB  01F0               	clrf	_var4
   915  00EC                     l839:
   916                           
   917                           ;Main.c: 198:        if(TXIF == 1){
   918  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   919  00ED  1303               	bcf	3,6	;RP1=0, select bank0
   920  00EE  1E0C               	btfss	12,4	;volatile
   921  00EF  28F1               	goto	u171
   922  00F0  28F2               	goto	u170
   923  00F1                     u171:
   924  00F1  28F8               	goto	l843
   925  00F2                     u170:
   926  00F2                     l841:
   927                           
   928                           ;Main.c: 199:         TXREG = car[var4];
   929  00F2  0870               	movf	_var4,w
   930  00F3  3E3A               	addlw	(low (_car| 0))& (0+255)
   931  00F4  0084               	movwf	4
   932  00F5  1383               	bcf	3,7	;select IRP bank0
   933  00F6  0800               	movf	0,w
   934  00F7  0099               	movwf	25	;volatile
   935  00F8                     l843:
   936                           
   937                           ;Main.c: 201:         _delay((unsigned long)((100)*(4000000/4000.0)));
   938  00F8  3082               	movlw	130
   939  00F9  00F9               	movwf	??_main+1
   940  00FA  30DD               	movlw	221
   941  00FB  00F8               	movwf	??_main
   942  00FC                     u217:
   943  00FC  0BF8               	decfsz	??_main,f
   944  00FD  28FC               	goto	u217
   945  00FE  0BF9               	decfsz	??_main+1,f
   946  00FF  28FC               	goto	u217
   947  0100  2901               	nop2
   948  0101  283B               	goto	l769
   949  0102  120A  118A  280C   	ljmp	start
   950  0105                     __end_of_main:
   951                           
   952                           	psect	text1
   953  0165                     __ptext1:	
   954 ;; *************** function _setup *****************
   955 ;; Defined at:
   956 ;;		line 210 in file "Main.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   970 ;;      Params:         0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0
   973 ;;      Totals:         0       0       0       0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function _setup
   986  0165                     _setup:
   987  0165                     l711:	
   988                           ;incstack = 0
   989                           ; Regs used in _setup: [wreg+status,2+status,0]
   990                           
   991                           
   992                           ;Main.c: 212:   ANSEL = 0b00000000;
   993  0165  1683               	bsf	3,5	;RP0=1, select bank3
   994  0166  1703               	bsf	3,6	;RP1=1, select bank3
   995  0167  0188               	clrf	8	;volatile
   996                           
   997                           ;Main.c: 213:   ANSELH = 0b00000000;
   998  0168  0189               	clrf	9	;volatile
   999                           
  1000                           ;Main.c: 215:   TRISA = 0b00000000;
  1001  0169  1683               	bsf	3,5	;RP0=1, select bank1
  1002  016A  1303               	bcf	3,6	;RP1=0, select bank1
  1003  016B  0185               	clrf	5	;volatile
  1004                           
  1005                           ;Main.c: 216:   TRISB = 0b00000000;
  1006  016C  0186               	clrf	6	;volatile
  1007  016D                     l713:
  1008                           
  1009                           ;Main.c: 217:   TRISC = 0b10000000;
  1010  016D  3080               	movlw	128
  1011  016E  0087               	movwf	7	;volatile
  1012  016F                     l715:
  1013                           
  1014                           ;Main.c: 218:   TRISD = 0x00;
  1015  016F  0188               	clrf	8	;volatile
  1016  0170                     l717:
  1017                           
  1018                           ;Main.c: 219:   TRISE = 0x00;
  1019  0170  0189               	clrf	9	;volatile
  1020  0171                     l719:
  1021                           
  1022                           ;Main.c: 224:   OPTION_REG = 0b11000100;
  1023  0171  30C4               	movlw	196
  1024  0172  0081               	movwf	1	;volatile
  1025  0173                     l721:
  1026                           
  1027                           ;Main.c: 229:   OSCCONbits.IRCF = 0b110;
  1028  0173  080F               	movf	15,w	;volatile
  1029  0174  398F               	andlw	-113
  1030  0175  3860               	iorlw	96
  1031  0176  008F               	movwf	15	;volatile
  1032  0177                     l723:
  1033                           
  1034                           ;Main.c: 230:   OSCCONbits.SCS = 1;
  1035  0177  140F               	bsf	15,0	;volatile
  1036  0178                     l725:
  1037                           
  1038                           ;Main.c: 235:   TXSTAbits.SYNC = 0;
  1039  0178  1218               	bcf	24,4	;volatile
  1040  0179                     l727:
  1041                           
  1042                           ;Main.c: 236:   TXSTAbits.BRGH = 1;
  1043  0179  1518               	bsf	24,2	;volatile
  1044  017A                     l729:
  1045                           
  1046                           ;Main.c: 237:   TXSTAbits.TX9 = 0;
  1047  017A  1318               	bcf	24,6	;volatile
  1048  017B                     l731:
  1049                           
  1050                           ;Main.c: 238:   TXSTAbits.TXEN= 1;
  1051  017B  1698               	bsf	24,5	;volatile
  1052  017C                     l733:
  1053                           
  1054                           ;Main.c: 239:   RCSTAbits.SPEN = 1;
  1055  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1056  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1057  017E  1798               	bsf	24,7	;volatile
  1058  017F                     l735:
  1059                           
  1060                           ;Main.c: 242:   RCSTAbits.RX9 = 0;
  1061  017F  1318               	bcf	24,6	;volatile
  1062  0180                     l737:
  1063                           
  1064                           ;Main.c: 243:   RCSTAbits.CREN = 1;
  1065  0180  1618               	bsf	24,4	;volatile
  1066  0181                     l739:
  1067                           
  1068                           ;Main.c: 246:     BAUDCTLbits.BRG16 = 0;
  1069  0181  1683               	bsf	3,5	;RP0=1, select bank3
  1070  0182  1703               	bsf	3,6	;RP1=1, select bank3
  1071  0183  1187               	bcf	7,3	;volatile
  1072  0184                     l741:
  1073                           
  1074                           ;Main.c: 247:     SPBRG =25;
  1075  0184  3019               	movlw	25
  1076  0185  1683               	bsf	3,5	;RP0=1, select bank1
  1077  0186  1303               	bcf	3,6	;RP1=0, select bank1
  1078  0187  0099               	movwf	25	;volatile
  1079  0188                     l743:
  1080                           
  1081                           ;Main.c: 248:     SPBRGH = 1;
  1082  0188  3001               	movlw	1
  1083  0189  009A               	movwf	26	;volatile
  1084  018A                     l745:
  1085                           
  1086                           ;Main.c: 252:   INTCON = 0b00000000;
  1087  018A  018B               	clrf	11	;volatile
  1088  018B                     l747:
  1089                           
  1090                           ;Main.c: 253:   PIE1 = 0b00100000;
  1091  018B  3020               	movlw	32
  1092  018C  008C               	movwf	12	;volatile
  1093  018D                     l749:
  1094                           
  1095                           ;Main.c: 254:   PIE2 = 0b00000000;
  1096  018D  018D               	clrf	13	;volatile
  1097  018E                     l751:
  1098                           
  1099                           ;Main.c: 258:   PORTA = 0x00;
  1100  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1101  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1102  0190  0185               	clrf	5	;volatile
  1103  0191                     l753:
  1104                           
  1105                           ;Main.c: 259:   PORTB = 0x00;
  1106  0191  0186               	clrf	6	;volatile
  1107  0192                     l755:
  1108                           
  1109                           ;Main.c: 260:   PORTC = 0x00;
  1110  0192  0187               	clrf	7	;volatile
  1111  0193                     l757:
  1112                           
  1113                           ;Main.c: 261:   PORTD = 0x00;
  1114  0193  0188               	clrf	8	;volatile
  1115  0194                     l759:
  1116                           
  1117                           ;Main.c: 262:   PORTE = 0x00;
  1118  0194  0189               	clrf	9	;volatile
  1119  0195                     l761:
  1120                           
  1121                           ;Main.c: 263:   PIR1 = 0x00;
  1122  0195  018C               	clrf	12	;volatile
  1123  0196                     l763:
  1124                           
  1125                           ;Main.c: 264:   PIR2 = 0x00;
  1126  0196  018D               	clrf	13	;volatile
  1127  0197                     l119:
  1128  0197  0008               	return
  1129  0198                     __end_of_setup:
  1130                           
  1131                           	psect	text2
  1132  01DD                     __ptext2:	
  1133 ;; *************** function _isr *****************
  1134 ;; Defined at:
  1135 ;;		line 116 in file "Main.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		None
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0
  1151 ;;      Temps:          2       0       0       0       0
  1152 ;;      Totals:         2       0       0       0       0
  1153 ;;Total ram usage:        2 bytes
  1154 ;; Hardware stack levels used: 1
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		Interrupt level 1
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           
  1163                           ;psect for function _isr
  1164  01DD                     _isr:
  1165  01DD                     i1l83:
  1166  01DD  0877               	movf	??_isr+1,w
  1167  01DE  008A               	movwf	10
  1168  01DF  0E76               	swapf	??_isr,w
  1169  01E0  0083               	movwf	3
  1170  01E1  0EFE               	swapf	btemp,f
  1171  01E2  0E7E               	swapf	btemp,w
  1172  01E3  0009               	retfie
  1173  01E4                     __end_of_isr:
  1174  007E                     btemp	set	126	;btemp
  1175  007E                     wtemp0	set	126
  1176                           
  1177                           	psect	intentry
  1178  0004                     __pintentry:	
  1179                           ;incstack = 0
  1180                           ; Regs used in _isr: []
  1181                           
  1182  0004                     interrupt_function:
  1183  007E                     saved_w	set	btemp
  1184  0004  00FE               	movwf	btemp
  1185  0005  0E03               	swapf	3,w
  1186  0006  00F6               	movwf	??_isr
  1187  0007  080A               	movf	10,w
  1188  0008  00F7               	movwf	??_isr+1
  1189  0009  120A  118A  29DD   	ljmp	_isr
  1190                           
  1191                           	psect	config
  1192                           
  1193                           ;Config register CONFIG1 @ 0x2007
  1194                           ;	Oscillator Selection bits
  1195                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1196                           ;	Watchdog Timer Enable bit
  1197                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1198                           ;	Power-up Timer Enable bit
  1199                           ;	PWRTE = OFF, PWRT disabled
  1200                           ;	RE3/MCLR pin function select bit
  1201                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1202                           ;	Code Protection bit
  1203                           ;	CP = OFF, Program memory code protection is disabled
  1204                           ;	Data Code Protection bit
  1205                           ;	CPD = OFF, Data memory code protection is disabled
  1206                           ;	Brown Out Reset Selection bits
  1207                           ;	BOREN = OFF, BOR disabled
  1208                           ;	Internal External Switchover bit
  1209                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1210                           ;	Fail-Safe Clock Monitor Enabled bit
  1211                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1212                           ;	Low Voltage Programming Enable bit
  1213                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1214                           ;	In-Circuit Debugger Mode bit
  1215                           ;	DEBUG = 0x1, unprogrammed default
  1216  2007                     	org	8199
  1217  2007  20D4               	dw	8404
  1218                           
  1219                           ;Config register CONFIG2 @ 0x2008
  1220                           ;	Brown-out Reset Selection bit
  1221                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1222                           ;	Flash Program Memory Self Write Enable bits
  1223                           ;	WRT = OFF, Write protection off
  1224  2008                     	org	8200
  1225  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        146
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      10
    BANK0            80      0      50
    BANK1            80      0       0
    BANK3            96      0      96
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              2 COMMON     2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      60       9      100.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9C      12        0.0%
ABS                  0      0      9C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue May 25 11:15:50 2021

                      pc 0002                       l90 004B                       u10 0040  
                     u11 003F                       u20 0046                       u21 0045  
                     u30 0051                       u31 0050                       u40 005B  
                     u41 005A                       u50 0070                       u51 006F  
                     u60 0076                       u61 0075                       u70 0084  
                     u71 0083                       u80 0099                       u81 0098  
                     u90 009F                       u91 009E                       fsr 0004  
                    l101 00A4                      l111 00E1                      l103 00AA  
                    l109 00DB                      l119 0197                      l711 0165  
                    l721 0173                      l713 016D                      l801 009F  
                    l731 017B                      l723 0177                      l715 016F  
                    l811 00B3                      l803 00AE                      l741 0184  
                    l733 017C                      l725 0178                      l717 0170  
                    l813 00B4                      l805 00B0                      l821 00CA  
                    l751 018E                      l743 0188                      l735 017F  
                    l727 0179                      l719 0171                      l831 00E8  
                    l823 00D0                      l807 00B1                      l815 00B5  
                    l761 0195                      l753 0191                      l745 018A  
                    l737 0180                      l729 017A                      l841 00F2  
                    l833 00E9                      l825 00D6                      l817 00BB  
                    l809 00B2                      l763 0196                      l755 0192  
                    l747 018B                      l739 0181                      l843 00F8  
                    l835 00EA                      l827 00E5                      l819 00C1  
                    l771 0040                      l757 0193                      l749 018D  
                    l837 00EB                      l829 00E7                      l781 0061  
                    l773 0046                      l765 0035                      l759 0194  
                    l839 00EC                      l791 007E                      l775 0051  
                    l783 006A                      l767 003A                      l793 0084  
                    l785 0070                      l777 0055                      l769 003B  
                    l795 008A                      l787 0076                      l779 005B  
                    l789 007B                      l797 0093                      l799 0099  
                    u100 00AA                      u101 00A9                      u110 00AE  
                    u111 00AD                      u120 00BB                      u121 00BA  
                    u130 00D0                      u131 00CF                      u140 00D6  
                    u141 00D5                      u150 00E1                      u151 00E0  
                    u207 00C5                      u160 00E5                      u217 00FC  
                    u161 00E4                      u170 00F2                      u171 00F1  
                    u187 0065                      u197 008E                      _cad 0020  
                    _car 003A                      _isr 01DD                      fsr0 0004  
                    _str 0190                      indf 0000                     ?_isr 0076  
                   _PIE1 008C                     _PIE2 008D                     _RCIF 0065  
                   _PIR1 000C                     _PIR2 000D                     i1l83 01DD  
                   _TXIF 0064                     _main 0035                     _var0 0074  
                   _var1 0073                     _var2 0072                     _var3 0071  
                   _var4 0070                     btemp 007E                     start 000C  
                  ??_isr 0076                    ?_main 0076                    _ANSEL 0188  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _TXREG 0019                    _valor 0075                    _setup 0165  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0105                   ??_main 0078  
                 ?_setup 0076                   _ANSELH 0189                   _INTCON 000B  
                 _SPBRGH 009A                   saved_w 007E  __end_of__initialization 0031  
         __pcstackCOMMON 0076             __pidataBANK0 0198             __pidataBANK3 0105  
          __end_of_setup 0198                  ??_setup 0078               __pmaintext 0035  
             __pintentry 0004                  __ptext1 0165                  __ptext2 01DD  
           __size_of_isr 0007     end_of_initialization 0031                _RCSTAbits 0018  
              _TXSTAbits 0098              _BAUDCTLbits 0187      start_initialization 000F  
            __end_of_isr 01E4               init_fetch0 01CA              __pdataBANK0 0020  
            __pdataBANK3 0190              __pbssCOMMON 0070                ___latbits 0002  
         __size_of_setup 0033        interrupt_function 0004            __size_of_main 00D0  
               init_ram0 01CE                 intlevel1 0000               _OSCCONbits 008F  
             _OPTION_REG 0081  
